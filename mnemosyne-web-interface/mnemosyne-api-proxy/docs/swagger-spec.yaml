openapi: 3.0.0
paths:
  /api/proxy/{controller}/{action}:
    post:
      operationId: ProxyController_proxyAction
      summary: Endpoint is responsible for proxying requests to the BE.
      description: This endpoint is responsible for proxying actions from the FE to
        the BE. The initial idea of creating such proxy server was initiated by
        the fact that for the Angular there is no way to send data without
        exposing credentials of the API. Therefore, in order to hide it and make
        sure that no one can send requests directly to the API, proxy server was
        created. The main feature of the proxy server was fact that it adds
        authorization header (basic auth). In order to send a request from the
        FE, developer has to pass controller, action (endpoint) and, optionally,
        body and params. Proxy will check, based on its environmental variables,
        if it can proxy the action. Basically it means, that by change
        environmental variables, it is possible to manipulate, what endpoint
        from the FE can be accessed. According to standards, what needs to be
        passed via headers, is passed via headers - x-access-token (access
        token) and cookies (only refresh token).
      parameters:
        - name: controller
          required: true
          in: query
          description: Controller that implements API endpoint.
          schema:
            type: string
        - name: action
          required: true
          in: query
          description: Action is the endpoint itself.
          schema:
            type: string
        - name: X-Access-Token
          required: false
          in: header
          description: X-Access-Token is an access user token that is passed from the FE
            to the API proxy and from the API proxy to the BE vie headers.
          schema:
            type: string
        - name: cookie
          required: false
          in: header
          description: The same as for X-Access-Token, cookies are passed via headers, in
            this case in cookies only refresh token is passed, but any other
            cookies will be passed as well.
          schema:
            type: string
      requestBody:
        required: true
        description: While controller and action is set via params of the proxy endpoint
          itself, in the body user has to pass HTTP method (HTTP method of the
          BE endpoint), params of the BE endpoint and payload/body.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProxyActionInterface"
      responses:
        "201":
          description: When in comes to responses, function returns everything that is
            returned by the BE.
      tags:
        - Proxy
info:
  title: Mnemosyne
  description: Documentation of Mnemosyne Proxy API.
  version: 0.0.1
  contact: {}
tags: []
servers: []
components:
  schemas:
    ProxyActionInterface:
      type: object
      properties:
        method:
          type: string
          description: In order to proxy request from the FE, in the body HTTP method must
            be specified
          example: POST
        payload:
          type: object
          description: For some methods and endpoints, where payload is required, user
            must provide payload/body of the request.
          example: '{ "email": "joe@doe.com", "password": "12qw!@QW" }'
        params:
          type: object
          description: Following the same rules, if some endpoints require user to provide
            params, user must do this via this field and provide the object that
            is going to be sent to the BE as endpoint params.
          example: '{ "confirmationHash": "..." }'
      required:
        - method
